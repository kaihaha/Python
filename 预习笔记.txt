一、 回顾之前所学内容
数据类型：int 整型、string 字符串、list 列表、tuple 元组、dic 字典、set 集合
整型（int）：表示整数，例如：1、2、3、-4等。
字符串（string）：表示文本，例如："Hello World"、"Python is awesome"等。
列表（list）：表示有序的元素集合，可以包含不同类型的数据，例如：[1, "hello", 3.5, [4, 5, 6]]等。
序列都可以进行的操作包括索引，切片，加，乘，检查成员。
元组（tuple）：也表示有序的元素集合，但是不可变，即不能添加、删除或修改元素，例如：(1, "hello", 3.5)等。
字典（dic）：表示键值对的集合，其中每个键唯一对应一个值，例如：{"name": "Tom", "age": 18, "gender": "male"}等。
字典是另一种可变容器模型，且可存储任意类型对象。
集合（set）：表示无序的元素集合，其中每个元素唯一，例如：{1, 2, 3, 4, 5}等。
三种基本的流程结构：顺序结构、选择结构、循环结构。
顺序结构：代码按照从上到下的顺序依次执行，没有条件、循环等控制语句干扰。
选择结构：根据条件选择是否执行某段代码，包括if语句和三元表达式。if语句根据条件判断执行哪个代码块，三元表达式根据条件判断返回不同的值。
循环结构：重复执行某段代码，直到满足条件退出循环，包括for循环和while循环。for循环适用于遍历序列或可迭代对象，while循环适用于需要根据条件重复执行某段代码的情况。

二、 模块化思想
1. 生活中常见的的汽车类型有哪些？
(1)、SUV(2)、轿车(3)、面包车(4)、栏板式货车(5)、厢式货车(6)、客车
2. 汽车种类较多，应用于不同场合，能不能设计出可以应用在多个场景里的汽车？
未来风格概念交通工具-Fritsch Durisotti
是的，设计出可以应用在多个场景里的汽车是有可能的。这样的汽车通常被称为多用途车（Multi-purpose vehicle，缩写为MPV）。MPV通常具有灵活的座位布局和空间配置，可以满足不同需求的人群和场景，例如家庭、商务、旅行等。此外，一些新型汽车也采用了可变尺寸的车身设计，可以根据需要调整车身大小，以满足不同场合的需求。
3. 将汽车模块化，优点是什么？
可维护性：将汽车的各个功能模块化，可以更容易地进行维护和升级，同时也能够更快地识别并解决问题。
可重用性：模块化的设计可以使得不同的汽车模块可以被重复使用，减少了重复编写代码的工作量，提高了代码的可重用性和开发效率。
可扩展性：模块化的设计使得汽车可以更加容易地进行扩展，例如添加新的功能模块或者升级已有模块，而不会对整个系统产生过多的影响。
可测试性：模块化的设计可以更容易地进行单元测试和集成测试，提高了汽车的测试效率和测试质量。
可维护性：模块化的设计可以使得不同的开发人员可以独立地开发和维护不同的模块，减少了协作成本，同时也可以更好地分工合作，提高了开发效率。
在Python中，可以将汽车的不同功能模块分别定义为不同的类或函数，使用面向对象的方法进行模块化设计。这样可以使代码更加清晰、易于理解和维护，同时也方便进行扩展和重用。
模块化思想
对于复杂系统，可以把相关的功能分解为模块，优点是：
• 易设计
• 易实现
• 易测试
• 易维护
• 可通用

4. Python 中的模块化技术
• 函数/类：可复用的代码片段
• 模块：多个逻辑上有关联的函数放到一个.py文件中
• 包：将多个Python模块放到一个文件夹里面，并配上一个__init__.py文件
三、 函数
1. 函数的定义
定义一个函数要使用def语句，依次写出函数名、括号、括号中的参数和冒号:，然后，在缩进块中编写函数体，函数的返回值用return语句返回。
定义函数时，需要确定函数名和参数个数；
如果有必要，可以先对参数的数据类型做检查；
函数体内部可以用return随时返回函数结果；
函数执行完毕也没有return语句时，自动return None。
函数可以同时返回多个值，但其实就是一个tuple。

函数代码块以 def 关键词开头，后接函数标识符名称和圆括号()。
任何传入参数和自变量必须放在圆括号中间。圆括号之间可以用于定义参数。
函数的第一行语句可以选择性地使用文档字符串—用于存放函数说明。
函数内容以冒号起始，并且缩进。
return [表达式] 结束函数，选择性地返回一个值给调用方。不带表达式的return相当于返回 None。
2. 函数的调用
函数定义好后，就可以在其它地方被调用
调用函数，只需要键入函数名，后面跟一个小括号()，小括号里面是输入参数列
表，参数之间用逗号“,”分割

定义一个函数只给了函数一个名称，指定了函数里包含的参数，和代码块结构。
这个函数的基本结构完成以后，你可以通过另一个函数调用执行，也可以直接从Python提示符执行。
调用了printme（）函数
3. 函数的参数传递
实参的个数和位置必须和形参一一对应

可更改(mutable)与不可更改(immutable)对象   默认参数和不定长参数（可变参数）

strings, tuples, 和 numbers 是不可更改的对象，而 list,dict 等则是可以修改的对象
函数参数可以按照位置或关键字传递
除了按位置传递参数，还可以使用关键字参数来指定参数值。这种方式不需要按照函数定义中的顺序传递参数，而是使用参数名来指定参数值

4. 函数的默认参数
形参的默认值
默认参数是指在函数定义中为参数提供默认值，如果调用函数时没有传递该参数，则使用默认值。
5. 函数的不定长参数
也叫可变参数
不定长参数(Arbitrary Argument)，又称可变参数，用于接收调用者传递给函数的任意个数参数
可变参数是指函数可以接受任意数量的参数，这些参数将被封装为一个元组或列表。
单星号*：可以使用*args表示元组参数，双星号**：使用**kwargs表示字典参数。
6. 函数的返回语句
 在Python中，用return语句结束函
数执行，并返回指定的值
• return语句可以放在函数体内任意
位置，返回值可以是零个或多个
任意类型对象
• 若没有return语句，或者return语
句后没有返回值，那么函数执行
完毕后，返回None对象